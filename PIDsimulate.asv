num=[1];
den=[60 1];
G=tf(num,den,'ioDelay',80)%原系统的传递函数
ts=0.001;  %采样时间=0.001s
DiscreteG=c2d(G,ts,'z');      %离散化
[Dnum,Dden]=tfdata(DiscreteG,'v');   %
for kp=0.1:0.1:1
    ki=0.001;
    kd=25;
    elast=0;      %前一时刻的偏差
    Ee=0;       %累积偏差
    ulast=0.0;    %前一时刻的控制量
    ylast=0;       %前一时刻的输出
    %PID参数
    u=zeros(1,500000);%每一千个点为一秒
    time=zeros(1,500000);%时刻点（设定1000个）
    for k=1:1:100000
        time(k)=k*ts;   %时间参数
        r(k)=0;      %期望值
        y(k)=-1*Dden(2)*ylast+Dnum(2)*ulast+Dnum(1)*u(k);%系统响应输出序列
        e(k)=r(k)-y(k);   %误差信号
        u(k)=kp*e(k)+ki*Ee+kd*(e(k)-elast); %系统PID控制器输出序列
        Ee=Ee+e(k);    %误差的累加和
        ulast=u(k);    	%前一个的控制器输出值
        ylast=y(k);    	%前一个的系统响应输出值
        elast=e(k);		%前一个误差信号的值
    end
    for k=100000:1:500000
        time(k)=k*ts;   %时间参数
        r(k)=1;      %期望值
        y(k)=-1*Dden(2)*ylast+Dnum(2)*ulast+Dnum(1)*u(k);%系统响应输出序列
        e(k)=r(k)-y(k);   %误差信号
        u(k)=kp*e(k)+ki*Ee+kd*(e(k)-elast); %系统PID控制器输出序列
        Ee=Ee+e(k);    %误差的累加和
        ulast=u(k);    	%前一个的控制器输出值
        ylast=y(k);    	%前一个的系统响应输出值
        elast=e(k);		%前一个误差信号的值
    end
    %（仅绘制过渡过程的曲线，x坐标限制为[0,1]）
    pout=plot(time,y,'--');xlim([0,500]);%不含积分分离的PID曲线
    hold on;
end

pin=plot(time,r,'-');xlim([0,500]);hold on;%指令信号的曲线（即期望输入）
